Git Synch
--------------

rails generate model TivitUserStatus user_id:integer activity_id:integer status_id:string
rails generate model TivitStatus status_id:string local:string 


rails remove model Tivitcomment 

Git
---------
heroku rename tiviti --app tivit1


git remote add origin git@github.com:<ilankasan>/<new repository name on GitHub you created.git>
git remote add heroku git@heroku.com:tiviti.git

$ git add .
git commit -am "added update task"
$ git checkout master
$ git merge ilan updating-users

git rm Gemfile.lock

git push ilangithub\ilan-bug_fixes
git push heroku master

git checkout -b ilan-march_11


Heroku
---------------
If you simply want to start fresh with a fresh set of empty tables, you can first ensure you have an up-to-date definition of the schema in db/schema.rb:

heroku rake db:schema:dump
and then:

heroku rake db:schema:load
which has the effect of dropping tables and then re-creating them, without running through your entire battery of migrations.




heroku create
git push heroku master
heroku rename tivit1
heroku pg:reset --db SHARED_DATABASE_URL





$ git add .
$ git commit -am "add decline and accept"
git checkout master
git merge updating-users
git merge yaniv-new_ui_1

$ 
heroku rake db:migrate

 rename_column(:activities, :owner_id, :user_id)

rails generate scaffold Activity name:string description:string status:string due:datetime owner:integer who:string
rails generate model Activity name:string description:string status:string due:datetime owner_id:integer who:string



rails generate scaffold Activity name:string description:string status:string due:datetime owner:integer who:string
rake db:migrate

rename_column :products, :upccode, :upc_code



git fetch git@github.com:ilankasan/Tivit-2.git/yaniv-new_ui_1
git fetch Tivit-2.git/yaniv-new_ui_1

git fetch git remote -v
yaniv-new_ui_1


Configuring My SQL
rails -d mysql my_rails_app
`gem install activerecord-mysql2-adapter


 git remote add origin git@github.com:<ilankasan>/first-app.git
 git push origin master
 git checkout -b edit-tivit
 
 
 
 
 
 
 
 
 
 
 
 
 
 rails generate migration change_description_activity_column_type
 
 rails generate change_column_(table_name, column_name, type, options): Changes the column to a different type using the same parameters as add_column.
 
 
 rails generate migration add_summary_to_activities text:string

ssh-add path/to/key
ssh-add "/Users/ilan kasan/.ssh/id_dsa"


16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
ssh-keygen -t rsa -C "tekkub@gmail.com"
The key fingerprint is:
aa:09:9d:16:4f:c6:0a:99:13:2c:6c:e6:25:19:06:04 ilan.kasan1@gmail.com



rails generate controller Pages home activities myteam signout myaccount
rails generate controller Tivitcomments create, new 



gem install autotest -v 4.4.6
gem install autotest-rails-pure -v 4.1.2


rails generate migration add_comment_to_tivit_user_statuses comment:string

rails generate migration add_avatar_columns_to_users avatar_file_name:string avatar_content_type:string avatar_file_size:integer avatar_updated_at:datetime




SELECT * FROM activities INNER JOIN tivit_user_status ON tivit_user_status.activity_id = activities.id WHERE (tivit_user_status.user_id = ? )





SELECT `tivit_user_statuses`.* FROM `tivit_user_statuses` WHERE (`tivit_user_statuses`.activity_id = 29) AND (`tivit_user_statuses`.`user_id` = 8) LIMIT 1
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT `tivitcomments`.* FROM `tivitcomments` WHERE (`tivitcomments`.activity_id = 29)[0m
